pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product <- pr_ill_from_dose(inclusion_list_and_level_based_mc_1_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product_log10 <- log10(pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product)
# T1+Inclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(inclusion_list_and_level_based_mc_1_noncompliant_dose_scaled)) {
pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product <- pr_ill_from_dose(inclusion_list_and_level_based_mc_1_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product_log10 <- log10(pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product)
# T1|Inclusion List+Compliant
if (model_mode==3) {
if (!is.na(inclusion_list_or_level_based_mc_1_compliant_dose_scaled)) {
pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product <- pr_ill_from_dose(inclusion_list_or_level_based_mc_1_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product_log10 <- log10(pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product)
# T1|Inclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(inclusion_list_or_level_based_mc_1_noncompliant_dose_scaled)) {
pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product <- pr_ill_from_dose(inclusion_list_or_level_based_mc_1_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product_log10 <- log10(pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product)
# T1+Exclusion List+Compliant
if (model_mode==3) {
if (!is.na(exclusion_list_and_level_based_mc_1_compliant_dose_scaled)) {
pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product <- pr_ill_from_dose(exclusion_list_and_level_based_mc_1_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product_log10 <- log10(pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product)
# T1+Exclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(exclusion_list_and_level_based_mc_1_noncompliant_dose_scaled)) {
pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product <- pr_ill_from_dose(exclusion_list_and_level_based_mc_1_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product_log10 <- log10(pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product)
# T1+Not Exclusion List+Compliant
if (model_mode==3) {
if (!is.na(not_exclusion_list_and_level_based_mc_1_compliant_dose_scaled)) {
pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product <- pr_ill_from_dose(not_exclusion_list_and_level_based_mc_1_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product_log10 <- log10(pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product)
# T1+Not Exclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(not_exclusion_list_and_level_based_mc_1_noncompliant_dose_scaled)) {
pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product <- pr_ill_from_dose(not_exclusion_list_and_level_based_mc_1_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product_log10 <- log10(pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product)
# T2+Compliant
if (model_mode==3) {
if (!is.na(mc_threshold_2_compliant_dose_scaled)) {
pr_ill_from_compliant_2_product <- tdr$mean_pr_ill
} else {
pr_ill_from_compliant_2_product <- NA
}
} else {
# M1 and M2
pr_ill_from_compliant_2_product <- pr_ill_from_dose(mc_threshold_2_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_compliant_2_product_log10 <- log10(pr_ill_from_compliant_2_product)
# T2+Noncompliant
if (model_mode==3) {
if (!is.na(mc_threshold_2_noncompliant_dose_scaled)) {
pr_ill_from_noncompliant_2_product <- tdr$mean_pr_ill
} else {
pr_ill_from_noncompliant_2_product <- NA
}
} else {
# M1 and M2
pr_ill_from_noncompliant_2_product <- pr_ill_from_dose(mc_threshold_2_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_noncompliant_2_product_log10 <- log10(pr_ill_from_noncompliant_2_product)
# T2+Inclusion List+Compliant
if (model_mode==3) {
if (!is.na(inclusion_list_and_level_based_mc_2_compliant_dose_scaled)) {
pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product <- pr_ill_from_dose(inclusion_list_and_level_based_mc_2_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product_log10 <- log10(pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product)
# T2+Inclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(inclusion_list_and_level_based_mc_2_noncompliant_dose_scaled)) {
pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product <- pr_ill_from_dose(inclusion_list_and_level_based_mc_2_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product_log10 <- log10(pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product)
# T2|Inclusion List+Compliant
if (model_mode==3) {
if (!is.na(inclusion_list_or_level_based_mc_2_compliant_dose_scaled)) {
pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product <- pr_ill_from_dose(inclusion_list_or_level_based_mc_2_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product_log10 <- log10(pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product)
# T2|Inclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(inclusion_list_or_level_based_mc_2_noncompliant_dose_scaled)) {
pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product <- pr_ill_from_dose(inclusion_list_or_level_based_mc_2_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product_log10 <- log10(pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product)
# T2+Exclusion List+Compliant
if (model_mode==3) {
if (!is.na(exclusion_list_and_level_based_mc_2_compliant_dose_scaled)) {
pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product <- pr_ill_from_dose(exclusion_list_and_level_based_mc_2_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product_log10 <- log10(pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product)
# T2+Exclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(exclusion_list_and_level_based_mc_2_noncompliant_dose_scaled)) {
pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product <- pr_ill_from_dose(exclusion_list_and_level_based_mc_2_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product_log10 <- log10(pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product)
# T2+Not Exclusion List+Compliant
if (model_mode==3) {
if (!is.na(not_exclusion_list_and_level_based_mc_2_compliant_dose_scaled)) {
pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product <- pr_ill_from_dose(not_exclusion_list_and_level_based_mc_2_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product_log10 <- log10(pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product)
# T2+Not Exclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(not_exclusion_list_and_level_based_mc_2_noncompliant_dose_scaled)) {
pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product <- pr_ill_from_dose(not_exclusion_list_and_level_based_mc_2_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product_log10 <- log10(pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product)
# T3+Compliant
if (model_mode==3) {
if (!is.na(mc_threshold_3_compliant_dose_scaled)) {
pr_ill_from_compliant_3_product <- tdr$mean_pr_ill
} else {
pr_ill_from_compliant_3_product <- NA
}
} else {
# M1 and M2
pr_ill_from_compliant_3_product <- pr_ill_from_dose(mc_threshold_3_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_compliant_3_product_log10 <- log10(pr_ill_from_compliant_3_product)
# T3+Noncompliant
if (model_mode==3) {
if (!is.na(mc_threshold_3_noncompliant_dose_scaled)) {
pr_ill_from_noncompliant_3_product <- tdr$mean_pr_ill
} else {
pr_ill_from_noncompliant_3_product <- NA
}
} else {
# M1 and M2
pr_ill_from_noncompliant_3_product <- pr_ill_from_dose(mc_threshold_3_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_noncompliant_3_product_log10 <- log10(pr_ill_from_noncompliant_3_product)
# T3+Inclusion List+Compliant
if (model_mode==3) {
if (!is.na(inclusion_list_and_level_based_mc_3_compliant_dose_scaled)) {
pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product <- pr_ill_from_dose(inclusion_list_and_level_based_mc_3_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product_log10 <- log10(pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product)
# T3+Inclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(inclusion_list_and_level_based_mc_3_noncompliant_dose_scaled)) {
pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product <- pr_ill_from_dose(inclusion_list_and_level_based_mc_3_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product_log10 <- log10(pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product)
# T3|Inclusion List+Compliant
if (model_mode==3) {
if (!is.na(inclusion_list_or_level_based_mc_3_compliant_dose_scaled)) {
pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product <- pr_ill_from_dose(inclusion_list_or_level_based_mc_3_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product_log10 <- log10(pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product)
# T3|Inclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(inclusion_list_or_level_based_mc_3_noncompliant_dose_scaled)) {
pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product <- pr_ill_from_dose(inclusion_list_or_level_based_mc_3_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product_log10 <- log10(pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product)
# T3+Exclusion List+Compliant
if (model_mode==3) {
if (!is.na(exclusion_list_and_level_based_mc_3_compliant_dose_scaled)) {
pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product <- pr_ill_from_dose(exclusion_list_and_level_based_mc_3_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product_log10 <- log10(pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product)
# T3+Exclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(exclusion_list_and_level_based_mc_3_noncompliant_dose_scaled)) {
pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product <- pr_ill_from_dose(exclusion_list_and_level_based_mc_3_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product_log10 <- log10(pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product)
# T3+Not Exclusion List+Compliant
if (model_mode==3) {
if (!is.na(not_exclusion_list_and_level_based_mc_3_compliant_dose_scaled)) {
pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product <- pr_ill_from_dose(not_exclusion_list_and_level_based_mc_3_compliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product_log10 <- log10(pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product)
# T3+Not Exclusion List+Noncompliant
if (model_mode==3) {
if (!is.na(not_exclusion_list_and_level_based_mc_3_noncompliant_dose_scaled)) {
pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product <- tdr$mean_pr_ill
} else {
pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product <- NA
}
} else {
# M1 and M2
pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product <- pr_ill_from_dose(not_exclusion_list_and_level_based_mc_3_noncompliant_dose_scaled, serving_alpha, serving_beta)
}
pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product_log10 <- log10(pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product)
single_run <- data.frame(
iteration=i,
model_mode=model_mode,
scaling_factor=scaling_factor_final,
attenuation_value=attenuation_value,
salmonella_serving_level=salmonella_serving_level,
serotype_in_serving=stringr::str_sub(serotype_in_serving, 1, -2),
serotype_in_serving_prop = serotype_in_serving,
# Thresholds
microbial_threshold_1=microbial_threshold$T1,
microbial_threshold_2=microbial_threshold$T2,
microbial_threshold_3=microbial_threshold$T3,
# is_level_above_threshold
is_level_above_threshold_1=is_level_above_threshold_1,
is_level_above_threshold_2=is_level_above_threshold_2,
is_level_above_threshold_3=is_level_above_threshold_3,
# Inclusion List
is_serotype_on_inclusion_list=is_serotype_on_inclusion_list,
# Threshold+Inclusion List
is_level_above_threshold_1_and_from_inclusion_list=is_level_above_threshold_1_and_from_inclusion_list,
is_level_above_threshold_2_and_from_inclusion_list=is_level_above_threshold_2_and_from_inclusion_list,
is_level_above_threshold_3_and_from_inclusion_list=is_level_above_threshold_3_and_from_inclusion_list,
# Threshold|Inclusion List
is_level_above_threshold_1_or_from_inclusion_list=is_level_above_threshold_1_or_from_inclusion_list,
is_level_above_threshold_2_or_from_inclusion_list=is_level_above_threshold_2_or_from_inclusion_list,
is_level_above_threshold_3_or_from_inclusion_list=is_level_above_threshold_3_or_from_inclusion_list,
# Threshold+Exclusion List
is_level_above_threshold_1_and_from_exclusion_list=is_level_above_threshold_1_and_from_exclusion_list,
is_level_above_threshold_2_and_from_exclusion_list=is_level_above_threshold_2_and_from_exclusion_list,
is_level_above_threshold_3_and_from_exclusion_list=is_level_above_threshold_3_and_from_exclusion_list,
# Threshold+Not Exclusion List
is_serotype_above_threshold_1_and_from_not_exclusion_list=is_serotype_above_threshold_1_and_from_not_exclusion_list,
is_serotype_above_threshold_2_and_from_not_exclusion_list=is_serotype_above_threshold_2_and_from_not_exclusion_list,
is_serotype_above_threshold_3_and_from_not_exclusion_list=is_serotype_above_threshold_3_and_from_not_exclusion_list,
overall_pr_ill=overall_pr_ill,
# dose_response_scaled_log10
overall_pr_ill_log10=overall_pr_ill_log10,
# Pr(ill from T+Compliant)
pr_ill_from_compliant_1_product=pr_ill_from_compliant_1_product,
pr_ill_from_compliant_2_product=pr_ill_from_compliant_2_product,
pr_ill_from_compliant_3_product=pr_ill_from_compliant_3_product,
# Pr(ill from T+Compliant) Log10
pr_ill_from_compliant_1_product_log10=pr_ill_from_compliant_1_product_log10,
pr_ill_from_compliant_2_product_log10=pr_ill_from_compliant_2_product_log10,
pr_ill_from_compliant_3_product_log10=pr_ill_from_compliant_3_product_log10,
# Pr(ill from T+Noncompliant)
pr_ill_from_noncompliant_1_product=pr_ill_from_noncompliant_1_product,
pr_ill_from_noncompliant_2_product=pr_ill_from_noncompliant_2_product,
pr_ill_from_noncompliant_3_product=pr_ill_from_noncompliant_3_product,
# Pr(ill from T+Noncompliant) Log10
pr_ill_from_noncompliant_1_product_log10=pr_ill_from_noncompliant_1_product_log10,
pr_ill_from_noncompliant_2_product_log10=pr_ill_from_noncompliant_2_product_log10,
pr_ill_from_noncompliant_3_product_log10=pr_ill_from_noncompliant_3_product_log10,
# Pr(ill from T+Inclusion List+Compliant)
pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product=pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product,
pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product=pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product,
pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product=pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product,
# Pr(ill from T+Inclusion List+Compliant) Log10
pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product_log10=pr_ill_from_inclusion_list_and_level_based_mc_1_compliant_product_log10,
pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product_log10=pr_ill_from_inclusion_list_and_level_based_mc_2_compliant_product_log10,
pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product_log10=pr_ill_from_inclusion_list_and_level_based_mc_3_compliant_product_log10,
# Pr(ill from T+Inclusion List+Noncompliant)
pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product=pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product,
pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product=pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product,
pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product=pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product,
# Pr(ill from T+Inclusion List+Noncompliant) Log10
pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product_log10=pr_ill_from_inclusion_list_and_level_based_mc_1_noncompliant_product_log10,
pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product_log10=pr_ill_from_inclusion_list_and_level_based_mc_2_noncompliant_product_log10,
pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product_log10=pr_ill_from_inclusion_list_and_level_based_mc_3_noncompliant_product_log10,
# Pr(ill from T|Inclusion List+Compliant)
pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product=pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product,
pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product=pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product,
pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product=pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product,
# Pr(ill from T|Inclusion List+Compliant) Log10
pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product_log10=pr_ill_from_inclusion_list_or_level_based_mc_1_compliant_product_log10,
pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product_log10=pr_ill_from_inclusion_list_or_level_based_mc_2_compliant_product_log10,
pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product_log10=pr_ill_from_inclusion_list_or_level_based_mc_3_compliant_product_log10,
# Pr(ill from T|Inclusion List+Noncompliant)
pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product=pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product,
pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product=pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product,
pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product=pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product,
# Pr(ill from T|Inclusion List+Noncompliant) Log10
pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product_log10=pr_ill_from_inclusion_list_or_level_based_mc_1_noncompliant_product_log10,
pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product_log10=pr_ill_from_inclusion_list_or_level_based_mc_2_noncompliant_product_log10,
pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product_log10=pr_ill_from_inclusion_list_or_level_based_mc_3_noncompliant_product_log10,
# Pr(ill from T+Exclusion List+Compliant)
pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product=pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product,
pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product=pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product,
pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product=pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product,
# Pr(ill from T+Exclusion List+Compliant) Log10
pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product_log10=pr_ill_from_exclusion_list_and_level_based_mc_1_compliant_product_log10,
pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product_log10=pr_ill_from_exclusion_list_and_level_based_mc_2_compliant_product_log10,
pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product_log10=pr_ill_from_exclusion_list_and_level_based_mc_3_compliant_product_log10,
# Pr(ill from T+Exclusion List+Noncompliant)/P(ill) from Serotype Typhimurium - Possible Vaccine Strain & level over the threshold
pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product=pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product,
pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product=pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product,
pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product=pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product,
# Pr(ill from T+Exclusion List+Noncompliant) Log10/P(ill) from Serotype Typhimurium - Possible Vaccine Strain & level over the threshold
pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product_log10=pr_ill_from_exclusion_list_and_level_based_mc_1_noncompliant_product_log10,
pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product_log10=pr_ill_from_exclusion_list_and_level_based_mc_2_noncompliant_product_log10,
pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product_log10=pr_ill_from_exclusion_list_and_level_based_mc_3_noncompliant_product_log10,
# Pr(ill from T+Not Exclusion List+Compliant)
pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product=pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product,
pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product=pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product,
pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product=pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product,
# Pr(ill from T+Not Exclusion List+Compliant) Log10
pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product_log10=pr_ill_from_not_exclusion_list_and_level_based_mc_1_compliant_product_log10,
pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product_log10=pr_ill_from_not_exclusion_list_and_level_based_mc_2_compliant_product_log10,
pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product_log10=pr_ill_from_not_exclusion_list_and_level_based_mc_3_compliant_product_log10,
# Pr(ill from T+Not Exclusion List+Noncompliant)/P(ill) from Serotype not Typhimurium - Possible Vaccine Strain & level over the threshold
pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product=pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product,
pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product=pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product,
pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product=pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product,
# Pr(ill from T+Not Exclusion List+Noncompliant) Log10/P(ill) from Serotype not Typhimurium - Possible Vaccine Strain & level over the threshold
pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product_log10=pr_ill_from_not_exclusion_list_and_level_based_mc_1_noncompliant_product_log10,
pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product_log10=pr_ill_from_not_exclusion_list_and_level_based_mc_2_noncompliant_product_log10,
pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product_log10=pr_ill_from_not_exclusion_list_and_level_based_mc_3_noncompliant_product_log10,
# Tuenis
tdr_equivalent_serotype=tdr$equivalent_serotype,
tdr_sample_size=tdr$sample_size,
tdr_sample_dose=tdr$dose,
tdr_w1=tdr$w1,
tdr_z1=tdr$z1,
tdr_u1=tdr$u1,
tdr_v1=tdr$v1,
tdr_a=tdr$a,
tdr_b=tdr$b,
tdr_w2=tdr$w2,
tdr_z2=tdr$z2,
tdr_u2=tdr$u2,
tdr_v2=tdr$v2,
tdr_r=tdr$r,
tdr_n=tdr$n,
tdr_mean_infection_vector=tdr$mean_infection_vector,
tdr_mean_conditional_illness=tdr$mean_conditional_illness,
tdr_mean_pr_ill=tdr$mean_pr_ill,
stringsAsFactors=FALSE
)
return(single_run)
}
# Parameter setup ----
# NOTE: You can put these number straight into poultry_model_clustered() instead of defining them here, but this method lets you cite data sources more cleanly
salmonella_mean <- -4.857 #FSIS HACCP Data 2016-2021
salmonella_st_dev <- 2.052 #FSIS HACCP Data 2016-2021
product_consumed_per_individual_per_day_mean <- 1.915239 # CDC 2016, Lambertini  et al. (2021) convert 4.41ln to log
product_consumed_per_individual_per_day_st_dev <- 0.2866344 # CDC 2016, Lambertini  et al. (2021) convert 0.66ln to log
# Poultry Model Running ----
# Create a new variable (i.e., raw_model_results) for each different scenario instead of overwriting to the same one
m3_variable_attenuation_scaled <- poultry_model_clustered(
total_iterations = 1e6, # total_iterations, total number of iterations to run the model per simulation; RECOMMENDED TO USE 1e5-1e6 FOR FINAL RUNS, USE FEWER FOR "EXPERIMENTING" OR IT WILL TAKE LONGER,
total_simulations = 10, # total_simulations, total number of simulations to run; START WITH 1 FOR "EXPERIMENTING", USE 10 TO GET MORE DATA
cores = 12, # cores, total number of CPU cores to use in parallel, if you have fewer than the number specified the model should default to maximum available instead; MOST PCS SHOULD HAVE 12, IF UNSURE USE 12 OR detectCores()
model_mode = 3, # model_mode: 1 = use Beta-Poisson model and parameters from WHO/FAO (2002) for all serotypes, 2 = use Beta-Poisson model with parameters from WHO/FAO (2002)  for all serotypes that are not Typhimurium - Possible Vaccine Strain, 3 = use Serotype-specific DR parameters collected from Teunis (2022); MODEL MODE MUST BE 1, 2, OR 3, USE AS APPROPRIATE
serotype_probabilities = serotype_probabilities_2021, # dataframe with serotype probabilities; CAN BE SUBSTITUTED WITH A DIFFERENT DATAFRAME, SEE TOP OF setup
serotype_equivalents = serotype_equivalents, # dataframe with how to serotype equivalences for Tuenis submodel; CAN BE SUBSTITUTED WITH A DIFFERENT DATAFRAME, SEE TOP OF setup
salmonella_mean = salmonella_mean, # Log10 Salmonella dose mean; CAN BE CHANGED WITH A DIFFERENT VALUE
salmonella_st_dev = salmonella_st_dev, # Log10 Salmonella dose standard deviation; CAN BE CHANGED WITH A DIFFERENT VALUE
attenuation_input = c(-5, 1.91), # FSIS Variable attenuation, Quantitative Risk Assessment for Salmonella in Raw Chicken and Raw Chicken Products, page 42
inclusion_list_input=c("Worthington1", "Uganda1", "Typhimurium1","Thompson1","Tennessee1","Senftenberg1","Schwarzengrund1", "Saintpaul1", "Ruiru1", "Rissen1", "Reading1", "Panama1", "Orion1", "Ohio1", "Newport1", "Muenster1", "Muenchen1", "Montevideo1", "Minnesota1", "Meleagridis1", "Mbandaka1", "Manhattan1", "London1", "Liverpool1", "Litchfield1", "Kentucky1", "Johannesburg1", "Javiana1", "Infantis1", "Indiana1", "IIIa [1],13,23:g,z51:-1", "I 4,[5],12:i:-1", "Holcomb1", "Heidelberg1", "Hadar1", "Enteritidis1", "Cubana1", "Cerro1", "Bredeney1", "Braenderup1", "Berta1", "Anatum1", "Albany1", "Agona1", "Alachua1", "4,[5],12:d:-1", "3,10:e,h:-1"),# Change the inclusion list based on different scenarios;if change to list 3, remember to change the stringr::str_sub for the inclusion/exclusion list
#inclusion_1: c("Typhimurium", "Hadar", "Muenchen");
#inclusion_2_Cluster1_2016-2021: c("Typhimurium", "Hadar", "Muenchen","I 4,[5],12:i:-","Berta","Newport", "Saintpaul", "Enteritidis", "Litchfield", "Manhattan");
#inclusion_3_Prop_Cluster1_2016-2021: c("Worthington1", "Uganda1", "Typhimurium1","Thompson1","Tennessee1","Senftenberg1","Schwarzengrund1", "Saintpaul1", "Ruiru1", "Rissen1", "Reading1", "Panama1", "Orion1", "Ohio1", "Newport1", "Muenster1", "Muenchen1", "Montevideo1", "Minnesota1", "Meleagridis1", "Mbandaka1", "Manhattan1", "London1", "Liverpool1", "Litchfield1", "Kentucky1", "Johannesburg1", "Javiana1", "Infantis1", "Indiana1", "IIIa [1],13,23:g,z51:-1", "I 4,[5],12:i:-1", "Holcomb1", "Heidelberg1", "Hadar1", "Enteritidis1", "Cubana1", "Cerro1", "Bredeney1", "Braenderup1", "Berta1", "Anatum1", "Albany1", "Agona1", "Alachua1", "4,[5],12:d:-1", "3,10:e,h:-1")
exclusion_list_input=c("Vaccined"), #c("Typhimurium - Possible Vaccine Strain", change to "Vaccined" in the proportion excel)
scaling_factor = 0.002,
# 0.00023, pill=2.112415e-06
product_consumed_per_individual_per_day_mean = product_consumed_per_individual_per_day_mean, # Log10 Product consumed mean; CAN BE CHANGED IF YOU HAVE NEW DATA, OTHERWISE USE CDC 2016, Lambertini  et al. (2019)
product_consumed_per_individual_per_day_st_dev = product_consumed_per_individual_per_day_st_dev, # Log10 Product consumed standard deviation; CAN BE CHANGED IF YOU HAVE NEW DATA, OTHERWISE USE CDC 2016, Lambertini  et al. (2019)
annual_servings = 10983387032, #28482586137, # total turkey servings per year in the U.S; POPULATION*NUMBER OF SERVINGS PER PERSON, CURRENTLY USES 2023 DATA
teunis_dose_response = teunis_dose_response, # Tuenis DR function; DO NOT CHANGE
tuenis_submodel_parameters =  tuenis_submodel_parameters, # dataframe with Tuenis function subparameters; DO NOT CHANGE
pr_ill_from_dose = pr_ill_from_dose, # Probability illness from dose function; DO NOT CHANGE
poultry_model = poultry_model, # Core poultry model function; DO NOT CHANGE
save_runs = TRUE, # Save runs to file?; IDEALLY KEEP AS TRUE
use_attenuation = TRUE, # Use attenuation?
use_scaling_factor = TRUE, # Use scaling factor?; DO NOT CHANGE
comment = "m3_variable_prop_or_list3_sf2_check" # User/Scenario comment; HIGHLY RECOMMENDED TO EDIT AS APPROPRIATE
)
m3_variable_attenuation_scaled_specifics <- get_table_values(m3_variable_attenuation_scaled) # Extracts specific data needed for Kim et al. 2024 paper
mean(m3_variable_attenuation_scaled$tdr_mean_pr_ill)
